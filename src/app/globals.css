@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body,
#__next,
:root {
  height: 100%;
}
body {
  @apply bg-neutral-950 text-neutral-100;
}

/* Leaflet base */
.leaflet-container {
  background: #0a0a0a;
}
.leaflet-control-attribution {
  display: none !important;
}

/* Ping pulse (for markers etc.) */
.pulse {
  animation: pulse 1.8s ease-out 1;
}
@keyframes pulse {
  0% {
    transform: scale(0.6);
    opacity: 0.95;
  }
  70% {
    transform: scale(2.2);
    opacity: 0.15;
  }
  100% {
    transform: scale(1);
    opacity: 0.6;
  }
}

/* Badges + active variants */
.badge {
  @apply inline-flex h-9 items-center text-xs font-medium px-2.5 rounded-md
         text-neutral-100/95 border border-white/20 bg-neutral-900/80;
}
.badge[data-active="true"][data-variant="eq"] {
  @apply bg-rose-500/15 border-rose-400/40 text-rose-100 ring-1 ring-rose-400/30;
  box-shadow: inset 0 0 0 2px rgba(244, 63, 94, 0.35);
}
.badge[data-active="true"][data-variant="fl"] {
  @apply bg-sky-500/15 border-sky-400/40 text-sky-100 ring-1 ring-sky-400/30;
  box-shadow: inset 0 0 0 2px rgba(14, 165, 233, 0.35);
}

/* Panels */
.panel {
  @apply rounded-2xl border border-white/20 bg-neutral-900/80
         shadow-glow backdrop-blur-md max-w-full overflow-hidden;
}

/* Range slider (centered thumb) */
.range {
  --range-track-h: 12px;
  --range-thumb: 16px;
  @apply align-middle w-64 appearance-none rounded-full outline-none;
  height: var(--range-track-h);
  background: rgba(255, 255, 255, 0.15);
}
.range:focus {
  @apply outline-none;
}
.range::-webkit-slider-runnable-track {
  height: var(--range-track-h);
  @apply rounded-full bg-white/15;
}
.range::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: var(--range-thumb);
  height: var(--range-thumb);
  @apply rounded-full bg-white shadow;
  margin-top: calc((var(--range-thumb) - var(--range-track-h)) / -2);
  border: none;
}
.range::-moz-range-track {
  height: var(--range-track-h);
  @apply rounded-full bg-white/15;
}
.range::-moz-range-progress {
  height: var(--range-track-h);
  @apply rounded-full bg-white/25;
}
.range::-moz-range-thumb {
  width: var(--range-thumb);
  height: var(--range-thumb);
  @apply rounded-full bg-white shadow;
  border: none;
}
.range::-ms-track {
  @apply bg-transparent border-0 text-transparent;
  height: var(--range-track-h);
}
.range::-ms-fill-lower,
.range::-ms-fill-upper {
  @apply bg-white/15;
  height: var(--range-track-h);
}
.range::-ms-thumb {
  width: var(--range-thumb);
  height: var(--range-thumb);
  @apply rounded-full bg-white shadow;
  border: none;
}

/* Inputs */
.input {
  @apply h-9 px-3 rounded-md border border-white/20 bg-neutral-900/80 text-sm text-neutral-100;
}

/* Earthquake screen shake (not used when map-only tremor is active) */
.shake-root {
  animation: quakeScreen var(--shake-duration, 900ms) ease-in-out 1;
  transform-origin: 50% 50%;
  will-change: transform;
}
@keyframes quakeScreen {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  8% {
    transform: translate(
        calc(-1px * var(--shake-intensity, 0.6)),
        calc(1px * var(--shake-intensity, 0.6))
      )
      rotate(-0.08deg);
  }
  16% {
    transform: translate(
        calc(1.5px * var(--shake-intensity, 0.6)),
        calc(-1.2px * var(--shake-intensity, 0.6))
      )
      rotate(0.1deg);
  }
  24% {
    transform: translate(
        calc(-1.8px * var(--shake-intensity, 0.6)),
        calc(1.3px * var(--shake-intensity, 0.6))
      )
      rotate(-0.12deg);
  }
  32% {
    transform: translate(
        calc(1.6px * var(--shake-intensity, 0.6)),
        calc(-1.1px * var(--shake-intensity, 0.6))
      )
      rotate(0.1deg);
  }
  40% {
    transform: translate(
        calc(-1.2px * var(--shake-intensity, 0.6)),
        calc(0.9px * var(--shake-intensity, 0.6))
      )
      rotate(-0.08deg);
  }
  48% {
    transform: translate(
        calc(1px * var(--shake-intensity, 0.6)),
        calc(-0.8px * var(--shake-intensity, 0.6))
      )
      rotate(0.06deg);
  }
  60% {
    transform: translate(
        calc(-0.8px * var(--shake-intensity, 0.6)),
        calc(0.6px * var(--shake-intensity, 0.6))
      )
      rotate(-0.05deg);
  }
  72% {
    transform: translate(
        calc(0.6px * var(--shake-intensity, 0.6)),
        calc(-0.5px * var(--shake-intensity, 0.6))
      )
      rotate(0.04deg);
  }
  84% {
    transform: translate(
        calc(-0.3px * var(--shake-intensity, 0.6)),
        calc(0.3px * var(--shake-intensity, 0.6))
      )
      rotate(-0.02deg);
  }
  100% {
    transform: translate(0, 0) rotate(0deg);
  }
}

/* Map-only tremor used during quake FX */
.map-tremor {
  --tremor-speed: 100ms;
  animation: mapTremor var(--tremor-speed) linear infinite;
  transform-origin: 50% 50%;
  will-change: transform;
  backface-visibility: hidden;
  transform: translateZ(0);
  contain: paint;
}
@keyframes mapTremor {
  0% {
    transform: translate(0, 0) rotate(0deg);
  }
  15% {
    transform: translate(
        calc(1.6px * var(--shake-intensity, 0.5)),
        calc(-1.4px * var(--shake-intensity, 0.5))
      )
      rotate(0.1deg);
  }
  30% {
    transform: translate(
        calc(-1.8px * var(--shake-intensity, 0.5)),
        calc(1.5px * var(--shake-intensity, 0.5))
      )
      rotate(-0.12deg);
  }
  45% {
    transform: translate(
        calc(1.4px * var(--shake-intensity, 0.5)),
        calc(-1.2px * var(--shake-intensity, 0.5))
      )
      rotate(0.09deg);
  }
  60% {
    transform: translate(
        calc(-1.3px * var(--shake-intensity, 0.5)),
        calc(1.1px * var(--shake-intensity, 0.5))
      )
      rotate(-0.09deg);
  }
  75% {
    transform: translate(
        calc(1.1px * var(--shake-intensity, 0.5)),
        calc(-0.9px * var(--shake-intensity, 0.5))
      )
      rotate(0.07deg);
  }
  100% {
    transform: translate(0, 0) rotate(0deg);
  }
}

/* React Rain Animation overlay â€” placed under Leaflet markers, above tiles */
#rain-root {
  position: fixed !important;
  inset: 0 !important;
  pointer-events: none !important;
  z-index: 500 !important; /* tiles ~200, markers ~600 */
}
#rain-root .rain {
  position: fixed !important;
  inset: 0 !important;
  width: 100% !important;
  height: 100% !important;
  pointer-events: none !important;
}
#rain-root .drop {
  background: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0) 0%,
    rgba(170, 200, 255, 0.95) 100%
  ) !important;
  width: 2px !important;
  height: 18px !important;
  opacity: 0.95 !important;
  filter: drop-shadow(0 0 2px rgba(170, 200, 255, 0.55)) !important;
}
